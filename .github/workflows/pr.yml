name: PR Check ziggiz-courier-handler-core

on:
  pull_request:
    branches:
      - main
      - next
      - next-major

jobs:
  test-lint:
    name: Test & Lint (CPython & PyPy)
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: .
    strategy:
      matrix:
        python-implementation: ["cpypy", "pypy"]
    steps:
      - uses: actions/checkout@v4
      - name: Read Python version
        id: python_version
        run: |
          PY_VERSION=$(cat .python-version)
          echo "version=${PY_VERSION}" >> $GITHUB_OUTPUT
        working-directory: .
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ steps.python_version.outputs.version }}
          python-implementation: ${{ matrix.python-implementation }}
          cache: "pip"
      - name: Install Poetry
        run: pip install poetry
      - name: Configure Poetry
        run: |
          poetry config virtualenvs.in-project true
      - name: Set up Poetry cache
        uses: actions/cache@v3
        id: poetry-cache
        with:
          path: ./.venv
          key: poetry-${{ runner.os }}-${{ matrix.python-implementation }}-${{ steps.python_version.outputs.version }}-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            poetry-${{ runner.os }}-${{ matrix.python-implementation }}-${{ steps.python_version.outputs.version }}-
      - name: Install dependencies
        run: poetry install  --with dev
      - name: Run black
        run: poetry run black --check ziggiz_courier_handler_core
      - name: Run flake8
        run: poetry run flake8 ziggiz_courier_handler_core
      - name: Run isort
        run: poetry run isort --check-only ziggiz_courier_handler_core
      #   - name: Run mypy
      #     run: poetry run mypy ziggiz_courier_handler_core
      - name: Run pytest
        run: poetry run pytest
