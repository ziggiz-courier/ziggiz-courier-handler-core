name: Release core-data-processing

on:
  workflow_dispatch:
    inputs:
      manual-release:
        description: "Manually trigger a release"
        required: false
        default: "false"
        type: choice
        options:
          - "true"
          - "false"
  push:
    branches:
      - main
      - next
      - next-major
    paths:
      - "core_data_processing/**"
      - "poetry.lock"
      - "pyproject.toml"
      - ".github/workflows/release-core-data-processing.yml"
      - "tests/**"
jobs:
  test-lint:
    name: Test & Lint
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: core-data-processing
    steps:
      - uses: actions/checkout@v4
      - name: Read Python version
        id: python_version
        run: |
          PY_VERSION=$(cat .python-version)
          echo "version=${PY_VERSION}" >> $GITHUB_OUTPUT
        working-directory: .
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ steps.python_version.outputs.version }}
      - name: Install Poetry
        run: pip install poetry
      - name: Install dependencies
        run: poetry install
      - name: Run black
        run: poetry run black --check core_data_processing
      - name: Run flake8
        run: poetry run flake8 core_data_processing
      - name: Run isort
        run: poetry run isort --check-only core_data_processing
      - name: Run mypy
        run: poetry run mypy core_data_processing
      - name: Run pytest
        run: poetry run pytest tests

  release:
    name: Version, Commit & Tag
    needs: test-lint
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: core-data-processing
    if: github.ref == 'refs/heads/main' || inputs.manual-release == 'true'
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0
      - name: Read Python version
        id: python_version
        run: |
          PY_VERSION=$(cat .python-version)
          echo "version=${PY_VERSION}" >> $GITHUB_OUTPUT
        working-directory: .
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ steps.python_version.outputs.version }}
      - name: Install Poetry
        run: pip install poetry
      - name: Install semantic-release
        run: pip install python-semantic-release==8.3.0
      - name: Run semantic-release
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          semantic-release publish
